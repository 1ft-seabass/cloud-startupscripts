#!/bin/bash

# @sacloud-once

# @sacloud-desc Sacloud CLIをインストールします。
# @sacloud-desc 詳細は以下をご覧ください。
# @sacloud-desc <a href="https://github.com/sakura-internet/node-sacloud/wiki/Getting-started-Guide" target="_new">https://github.com/sakura-internet/node-sacloud/wiki/Getting-started-Guide</a>
# @sacloud-desc （このスクリプトは、CentOS6.XもしくはScientific Linux6.Xでのみ動作します）
# @sacloud-require-archive distro-centos distro-ver-6.*
# @sacloud-require-archive distro-sl distro-ver-6.*

#---------START OF iptables---------#
cat <<'EOT' > /etc/sysconfig/iptables
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:fail2ban-SSH - [0:0]
-A INPUT -p tcp -m multiport --dports 22 -j fail2ban-SSH 
-A INPUT -p TCP -m state --state NEW ! --syn -j DROP
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT 
-A INPUT -p icmp -j ACCEPT 
-A INPUT -i lo -j ACCEPT 
-A INPUT -p udp --sport 123 --dport 123 -j ACCEPT
-A INPUT -p udp --sport 53 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT 
-A fail2ban-SSH -j RETURN
COMMIT
EOT
service iptables restart
#---------END OF iptables---------#
#---------START OF sacloud---------#
export HOME=/root
cd /root/

# Try to figure out the os and arch for binary fetching
uname="$(uname -a)"

os=
case "$uname" in
  Linux\ *) os=linux ;;
  Darwin\ *) os=darwin ;;
  SunOS\ *) os=sunos ;;
esac

arch=x86
case "$uname" in
  *x86_64*) arch=x64 ;;
esac

version=$(curl http://nodejs.org/dist/ 2> /dev/null | egrep -o '[0-9]+\.[0-9]*[02468]\.[0-9]+' | sort -u -k 1,1n -k 2,2n -k 3,3n -t . | tail -n1)
mkdir "node-$version"
ln -s "node-$version" node-stable
export PATH=/usr/local/bin:/root/node-$version/bin/:$PATH

urls=(
"http://nodejs.org/dist/v$version/node-v$version-$os-$arch.tar.gz"
"http://nodejs.org/dist/node-v$version.tar.gz"
"http://nodejs.org/dist/node-$version.tar.gz"
)
for url in "${urls[@]}"; do
 curl "$url" 2>/dev/null > "node-$version.tar.gz"
 if [ $? -eq 0 ]; then
   tar xzf "node-$version.tar.gz" -C "node-$version" --strip-components=1
   if [ $? -eq 0 ]; then
     echo "fetched from $url" >&2
  break
   fi
 fi
done

if [ ! -f "node-$version.tar.gz" ] ; then
   mkdir -rf "node-$version"  node-stable
   exit 1
fi

rm -rf "node-$version.tar.gz"

npm -g install sacloud
cat <<'EOT' >> /root/.bashrc
export PATH=$HOME/node-stable/bin/:$PATH
EOT
mkdir /root/.node-completion
cat <<'EOT' >>/root/.node-completion/sacloud
__sacloud_comp() {
  COMPREPLY=()
  COMPREPLY=($(sacloud --compgen "${COMP_WORDS[@]}"))
  return 0
}
complete -F __sacloud_comp sacloud 2>/dev/null
EOT
sacloud --install >>/root/.bashrc

if [ ! -f /root/node-stable/bin/sacloud ] ; then
   exit 1
fi
#---------END OF sacloud---------#